# base-image for node on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/#dockerfile-templates
# and about balena base images here: https://www.balena.io/docs/reference/base-images/base-images/
FROM balenalib/%%BALENA_MACHINE_NAME%%-node:10-stretch-run as build

# Defines our working directory in container
WORKDIR /usr/src/app

# Copies the package.json first for better cache on later pushes
COPY package.json ./

# This install npm dependencies on the balena build server,
# making sure to clean up the artifacts it creates in order to reduce the image size.
RUN JOBS=MAX npm install --unsafe-perm && npm cache verify && rm -rf /tmp/*

# This will copy all files in our root to the working  directory in the container
COPY . ./

RUN JOBS=MAX npm run build

# production stage
FROM balenalib/%%BALENA_MACHINE_NAME%%-node:10-stretch-run

# Defines our working directory in container
WORKDIR /usr/src/app

# Copies all build stage contents to working directory
COPY --from=build /usr/src/app/ ./

# Removes all non-production dependencies
RUN JOBS=MAX npm prune --production

CMD ["node", "/usr/src/app/dist/main.js"]